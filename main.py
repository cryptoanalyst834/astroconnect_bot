import os
import logging
from fastapi import FastAPI
from aiogram import Bot, Dispatcher, F
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv
from contextlib import asynccontextmanager

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher(storage=MemoryStorage())

@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç AstroConnect üöÄ")

# Lifespan context (–≤–º–µ—Å—Ç–æ @app.on_event("startup"))
@asynccontextmanager
async def lifespan(app: FastAPI):
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    import asyncio
    asyncio.create_task(dp.start_polling(bot))
    yield

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI(title="AstroConnect API", lifespan=lifespan)

# FastAPI API —Ä–æ—É—Ç–µ—Ä
from api.router import api_router
app.include_router(api_router)
